#include <iostream>
#include "lib/SG_SolarSystem.h"
#include "lib/CatalogStar.h"
#include "lib/StarDatabase.h"

using namespace std;

int main()
{
    long CatNo = 500;
    string starName;
    cout << "Starting StarGen-II " << endl;
    cout << "Generationg solar system with seed " << CatNo << endl;

    // You need this data on the star: Mass, Bolometric Magnitude, Age, Seed (for random items)
    double mass;         // unit = Solar mass
    long double age;     // unit = years
    long seed;
    // Optional:
    long double boloMagn;

    // ------------------------------------------
    // CatNo == 0 => EARTH
    // ------------------------------------------
    if (CatNo==0)
    {
        SG_SolarSystem* SG = new SG_SolarSystem(0);
        SG->setStarName("Sol");
        // This will generate a better "Sol" system
        SG->generateSolarSystem("system_0.xml");
        SG->generateSolarSystem("system_0.txt");
        delete(SG);
    }
    // ------------------------------------------
    // CatNo <64 => we use the CELESTIA CATALOG
    // ------------------------------------------
    else if (CatNo<64)
    {
        SG_SolarSystem* SG = new SG_SolarSystem(CatNo);
        StarDatabase* celestiaCatalog = new StarDatabase("stars.dat");
        celestiaCatalog->readStars(64);
        CatalogStar* mPrimaryStar = celestiaCatalog->getStar(CatNo);

        // CatNo    = mPrimaryStar->getCatalogNumber();
        mass     = mPrimaryStar->getMass();
        boloMagn = mPrimaryStar->getBolometricMagnitude();
        age      = mPrimaryStar->getAge();   // unit = years
        starName = "test";                   //  mPrimaryStar->getName();

        SG->setStarName(starName);
        SG->setStarMass(mass);          // unit = Solar mass - determine: Mass + Luminosity + Ecosphere + Life
        SG->setStarAge(age);

        // Luminosity:
        // Luminosity is normally calculated from Mass.
        // But if you known the exact value, you can set it like this:
        // SG->setStarLuminosity(3.5);    // (unit = Solar Luminosity)
        // if you prefer, you can calculate the Luminosity, based on Bolometric magnitude (all radiations)
        // SG->setStarBoloMagnitude(-5);

        delete(celestiaCatalog);

        SG->generateSolarSystem("system_" + to_string(CatNo) + ".xml");
        SG->generateSolarSystem("system_" + to_string(CatNo) + ".txt");
        delete(SG);
    }
    // Empty parameter or other cases: we use RANDOM values.
    else
    {
        seed = CatNo;
        SG_SolarSystem* SG = new SG_SolarSystem(seed);
        SG->setStarName("");              // will be autogenerated
        SG->setStarMass(RANDOM);          // determine: Mass + Luminosity + Ecosphere + Life
        SG->setStarAge(RANDOM);

        SG->generateSolarSystem("system_" + to_string(seed) + ".xml");
        SG->generateSolarSystem("system_" + to_string(seed) + ".txt");
        delete(SG);
    }


    return 0;
}
